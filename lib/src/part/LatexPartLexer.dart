// Generated from LatexPart.g4 by ANTLR 4.13.1
// ignore_for_file: unused_import, unused_local_variable, prefer_single_quotes
import 'package:antlr4/antlr4.dart';

class LatexPartLexer extends Lexer {
  static final checkVersion =
      () => RuntimeMetaData.checkVersion('4.13.1', RuntimeMetaData.VERSION);

  static final List<DFA> _decisionToDFA = List.generate(
      _ATN.numberOfDecisions, (i) => DFA(_ATN.getDecisionState(i), i));
  static final PredictionContextCache _sharedContextCache =
      PredictionContextCache();
  static const int TOKEN_T__0 = 1,
      TOKEN_PART_BEGIN = 2,
      TOKEN_PART_END = 3,
      TOKEN_GROUP_START = 4,
      TOKEN_GROUP_END = 5,
      TOKEN_OPEN_RAISED = 6,
      TOKEN_CLOSE_RAISED = 7,
      TOKEN_CHORD = 8,
      TOKEN_METRE_BAR = 9,
      TOKEN_PUNCTUATION = 10,
      TOKEN_WORD = 11,
      TOKEN_WS = 12,
      TOKEN_COMMENT = 13;
  @override
  final List<String> channelNames = ['DEFAULT_TOKEN_CHANNEL', 'HIDDEN'];

  @override
  final List<String> modeNames = ['DEFAULT_MODE'];

  @override
  final List<String> ruleNames = [
    'T__0',
    'PART_BEGIN',
    'PART_END',
    'GROUP_START',
    'GROUP_END',
    'OPEN_RAISED',
    'CLOSE_RAISED',
    'CHORD',
    'METRE_BAR',
    'PUNCTUATION',
    'WORD',
    'WS',
    'COMMENT'
  ];

  static final List<String?> _LITERAL_NAMES = [
    null,
    "'\\'",
    null,
    null,
    "'{'",
    "'}'",
    "'\\['",
    "']'",
    null,
    "'|'"
  ];
  static final List<String?> _SYMBOLIC_NAMES = [
    null,
    null,
    "PART_BEGIN",
    "PART_END",
    "GROUP_START",
    "GROUP_END",
    "OPEN_RAISED",
    "CLOSE_RAISED",
    "CHORD",
    "METRE_BAR",
    "PUNCTUATION",
    "WORD",
    "WS",
    "COMMENT"
  ];
  static final Vocabulary VOCABULARY =
      VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

  @override
  Vocabulary get vocabulary {
    return VOCABULARY;
  }

  LatexPartLexer(super.input) {
    interpreter = LexerATNSimulator(_ATN, _decisionToDFA, _sharedContextCache,
        recog: this);
  }

  @override
  List<int> get serializedATN => _serializedATN;

  @override
  String get grammarFileName => 'LatexPart.g4';

  @override
  ATN getATN() {
    return _ATN;
  }

  static const List<int> _serializedATN = [
    4,
    0,
    13,
    136,
    6,
    -1,
    2,
    0,
    7,
    0,
    2,
    1,
    7,
    1,
    2,
    2,
    7,
    2,
    2,
    3,
    7,
    3,
    2,
    4,
    7,
    4,
    2,
    5,
    7,
    5,
    2,
    6,
    7,
    6,
    2,
    7,
    7,
    7,
    2,
    8,
    7,
    8,
    2,
    9,
    7,
    9,
    2,
    10,
    7,
    10,
    2,
    11,
    7,
    11,
    2,
    12,
    7,
    12,
    1,
    0,
    1,
    0,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    43,
    8,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    1,
    3,
    1,
    57,
    8,
    1,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    1,
    2,
    3,
    2,
    78,
    8,
    2,
    1,
    3,
    1,
    3,
    1,
    4,
    1,
    4,
    1,
    5,
    1,
    5,
    1,
    5,
    1,
    6,
    1,
    6,
    1,
    7,
    1,
    7,
    5,
    7,
    91,
    8,
    7,
    10,
    7,
    12,
    7,
    94,
    9,
    7,
    1,
    7,
    5,
    7,
    97,
    8,
    7,
    10,
    7,
    12,
    7,
    100,
    9,
    7,
    1,
    7,
    1,
    7,
    1,
    7,
    5,
    7,
    105,
    8,
    7,
    10,
    7,
    12,
    7,
    108,
    9,
    7,
    3,
    7,
    110,
    8,
    7,
    1,
    8,
    1,
    8,
    1,
    9,
    1,
    9,
    1,
    10,
    4,
    10,
    117,
    8,
    10,
    11,
    10,
    12,
    10,
    118,
    1,
    11,
    4,
    11,
    122,
    8,
    11,
    11,
    11,
    12,
    11,
    123,
    1,
    12,
    1,
    12,
    5,
    12,
    128,
    8,
    12,
    10,
    12,
    12,
    12,
    131,
    9,
    12,
    1,
    12,
    1,
    12,
    1,
    12,
    1,
    12,
    1,
    129,
    0,
    13,
    1,
    1,
    3,
    2,
    5,
    3,
    7,
    4,
    9,
    5,
    11,
    6,
    13,
    7,
    15,
    8,
    17,
    9,
    19,
    10,
    21,
    11,
    23,
    12,
    25,
    13,
    1,
    0,
    6,
    1,
    0,
    65,
    71,
    2,
    0,
    35,
    35,
    38,
    38,
    5,
    0,
    35,
    35,
    38,
    38,
    48,
    57,
    65,
    90,
    97,
    122,
    8,
    0,
    33,
    34,
    39,
    41,
    43,
    47,
    58,
    59,
    61,
    61,
    63,
    63,
    92,
    92,
    94,
    96,
    5,
    0,
    45,
    45,
    48,
    57,
    65,
    90,
    95,
    95,
    97,
    122,
    3,
    0,
    9,
    10,
    13,
    13,
    32,
    32,
    145,
    0,
    1,
    1,
    0,
    0,
    0,
    0,
    3,
    1,
    0,
    0,
    0,
    0,
    5,
    1,
    0,
    0,
    0,
    0,
    7,
    1,
    0,
    0,
    0,
    0,
    9,
    1,
    0,
    0,
    0,
    0,
    11,
    1,
    0,
    0,
    0,
    0,
    13,
    1,
    0,
    0,
    0,
    0,
    15,
    1,
    0,
    0,
    0,
    0,
    17,
    1,
    0,
    0,
    0,
    0,
    19,
    1,
    0,
    0,
    0,
    0,
    21,
    1,
    0,
    0,
    0,
    0,
    23,
    1,
    0,
    0,
    0,
    0,
    25,
    1,
    0,
    0,
    0,
    1,
    27,
    1,
    0,
    0,
    0,
    3,
    56,
    1,
    0,
    0,
    0,
    5,
    77,
    1,
    0,
    0,
    0,
    7,
    79,
    1,
    0,
    0,
    0,
    9,
    81,
    1,
    0,
    0,
    0,
    11,
    83,
    1,
    0,
    0,
    0,
    13,
    86,
    1,
    0,
    0,
    0,
    15,
    88,
    1,
    0,
    0,
    0,
    17,
    111,
    1,
    0,
    0,
    0,
    19,
    113,
    1,
    0,
    0,
    0,
    21,
    116,
    1,
    0,
    0,
    0,
    23,
    121,
    1,
    0,
    0,
    0,
    25,
    125,
    1,
    0,
    0,
    0,
    27,
    28,
    5,
    92,
    0,
    0,
    28,
    2,
    1,
    0,
    0,
    0,
    29,
    30,
    5,
    92,
    0,
    0,
    30,
    31,
    5,
    98,
    0,
    0,
    31,
    32,
    5,
    101,
    0,
    0,
    32,
    33,
    5,
    103,
    0,
    0,
    33,
    34,
    5,
    105,
    0,
    0,
    34,
    35,
    5,
    110,
    0,
    0,
    35,
    36,
    5,
    118,
    0,
    0,
    36,
    37,
    5,
    101,
    0,
    0,
    37,
    38,
    5,
    114,
    0,
    0,
    38,
    39,
    5,
    115,
    0,
    0,
    39,
    40,
    5,
    101,
    0,
    0,
    40,
    42,
    1,
    0,
    0,
    0,
    41,
    43,
    5,
    42,
    0,
    0,
    42,
    41,
    1,
    0,
    0,
    0,
    42,
    43,
    1,
    0,
    0,
    0,
    43,
    57,
    1,
    0,
    0,
    0,
    44,
    45,
    5,
    92,
    0,
    0,
    45,
    46,
    5,
    98,
    0,
    0,
    46,
    47,
    5,
    101,
    0,
    0,
    47,
    48,
    5,
    103,
    0,
    0,
    48,
    49,
    5,
    105,
    0,
    0,
    49,
    50,
    5,
    110,
    0,
    0,
    50,
    51,
    5,
    99,
    0,
    0,
    51,
    52,
    5,
    104,
    0,
    0,
    52,
    53,
    5,
    111,
    0,
    0,
    53,
    54,
    5,
    114,
    0,
    0,
    54,
    55,
    5,
    117,
    0,
    0,
    55,
    57,
    5,
    115,
    0,
    0,
    56,
    29,
    1,
    0,
    0,
    0,
    56,
    44,
    1,
    0,
    0,
    0,
    57,
    4,
    1,
    0,
    0,
    0,
    58,
    59,
    5,
    92,
    0,
    0,
    59,
    60,
    5,
    101,
    0,
    0,
    60,
    61,
    5,
    110,
    0,
    0,
    61,
    62,
    5,
    100,
    0,
    0,
    62,
    63,
    5,
    118,
    0,
    0,
    63,
    64,
    5,
    101,
    0,
    0,
    64,
    65,
    5,
    114,
    0,
    0,
    65,
    66,
    5,
    115,
    0,
    0,
    66,
    78,
    5,
    101,
    0,
    0,
    67,
    68,
    5,
    92,
    0,
    0,
    68,
    69,
    5,
    101,
    0,
    0,
    69,
    70,
    5,
    110,
    0,
    0,
    70,
    71,
    5,
    100,
    0,
    0,
    71,
    72,
    5,
    99,
    0,
    0,
    72,
    73,
    5,
    104,
    0,
    0,
    73,
    74,
    5,
    111,
    0,
    0,
    74,
    75,
    5,
    114,
    0,
    0,
    75,
    76,
    5,
    117,
    0,
    0,
    76,
    78,
    5,
    115,
    0,
    0,
    77,
    58,
    1,
    0,
    0,
    0,
    77,
    67,
    1,
    0,
    0,
    0,
    78,
    6,
    1,
    0,
    0,
    0,
    79,
    80,
    5,
    123,
    0,
    0,
    80,
    8,
    1,
    0,
    0,
    0,
    81,
    82,
    5,
    125,
    0,
    0,
    82,
    10,
    1,
    0,
    0,
    0,
    83,
    84,
    5,
    92,
    0,
    0,
    84,
    85,
    5,
    91,
    0,
    0,
    85,
    12,
    1,
    0,
    0,
    0,
    86,
    87,
    5,
    93,
    0,
    0,
    87,
    14,
    1,
    0,
    0,
    0,
    88,
    92,
    7,
    0,
    0,
    0,
    89,
    91,
    7,
    1,
    0,
    0,
    90,
    89,
    1,
    0,
    0,
    0,
    91,
    94,
    1,
    0,
    0,
    0,
    92,
    90,
    1,
    0,
    0,
    0,
    92,
    93,
    1,
    0,
    0,
    0,
    93,
    98,
    1,
    0,
    0,
    0,
    94,
    92,
    1,
    0,
    0,
    0,
    95,
    97,
    7,
    2,
    0,
    0,
    96,
    95,
    1,
    0,
    0,
    0,
    97,
    100,
    1,
    0,
    0,
    0,
    98,
    96,
    1,
    0,
    0,
    0,
    98,
    99,
    1,
    0,
    0,
    0,
    99,
    109,
    1,
    0,
    0,
    0,
    100,
    98,
    1,
    0,
    0,
    0,
    101,
    102,
    5,
    47,
    0,
    0,
    102,
    106,
    7,
    0,
    0,
    0,
    103,
    105,
    7,
    1,
    0,
    0,
    104,
    103,
    1,
    0,
    0,
    0,
    105,
    108,
    1,
    0,
    0,
    0,
    106,
    104,
    1,
    0,
    0,
    0,
    106,
    107,
    1,
    0,
    0,
    0,
    107,
    110,
    1,
    0,
    0,
    0,
    108,
    106,
    1,
    0,
    0,
    0,
    109,
    101,
    1,
    0,
    0,
    0,
    109,
    110,
    1,
    0,
    0,
    0,
    110,
    16,
    1,
    0,
    0,
    0,
    111,
    112,
    5,
    124,
    0,
    0,
    112,
    18,
    1,
    0,
    0,
    0,
    113,
    114,
    7,
    3,
    0,
    0,
    114,
    20,
    1,
    0,
    0,
    0,
    115,
    117,
    7,
    4,
    0,
    0,
    116,
    115,
    1,
    0,
    0,
    0,
    117,
    118,
    1,
    0,
    0,
    0,
    118,
    116,
    1,
    0,
    0,
    0,
    118,
    119,
    1,
    0,
    0,
    0,
    119,
    22,
    1,
    0,
    0,
    0,
    120,
    122,
    7,
    5,
    0,
    0,
    121,
    120,
    1,
    0,
    0,
    0,
    122,
    123,
    1,
    0,
    0,
    0,
    123,
    121,
    1,
    0,
    0,
    0,
    123,
    124,
    1,
    0,
    0,
    0,
    124,
    24,
    1,
    0,
    0,
    0,
    125,
    129,
    5,
    37,
    0,
    0,
    126,
    128,
    9,
    0,
    0,
    0,
    127,
    126,
    1,
    0,
    0,
    0,
    128,
    131,
    1,
    0,
    0,
    0,
    129,
    130,
    1,
    0,
    0,
    0,
    129,
    127,
    1,
    0,
    0,
    0,
    130,
    132,
    1,
    0,
    0,
    0,
    131,
    129,
    1,
    0,
    0,
    0,
    132,
    133,
    5,
    10,
    0,
    0,
    133,
    134,
    1,
    0,
    0,
    0,
    134,
    135,
    6,
    12,
    0,
    0,
    135,
    26,
    1,
    0,
    0,
    0,
    11,
    0,
    42,
    56,
    77,
    92,
    98,
    106,
    109,
    118,
    123,
    129,
    1,
    6,
    0,
    0
  ];

  static final ATN _ATN = ATNDeserializer().deserialize(_serializedATN);
}
